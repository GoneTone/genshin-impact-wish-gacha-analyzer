/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */

/* 0 */

/* 1 */

/* Attributes
	---------------------------------------------------------------------- */

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */

/* Contains
	---------------------------------------------------------------------- */

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */

/* Internal Use Only */

/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */

/* QSA/matchesSelector
	---------------------------------------------------------------------- */

/* Sorting
	---------------------------------------------------------------------- */

/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */

/* eslint no-unused-expressions: "off" */

/* eslint-disable eqeqeq */

/* eslint-disable no-cond-assign */

/* eslint-disable no-loop-func */

/* eslint-enable eqeqeq */

/* eslint-enable no-cond-assign */

/* eslint-enable no-loop-func */

/* getElement(s)By*
	---------------------------------------------------------------------- */

/* global Symbol */

/* harmony default export */

/* jshint -W018 */

/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/

/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */

/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */

/**
 * Load a url into a page
 */

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */

/************************************************************************/

/******/

/***/

//

//    - Any

//    - Node.DOCUMENT_NODE

//    - Node.ELEMENT_NODE

//    documentElement of the parent window

//   .css('--customProperty) (#3144)

//   .css('filter') (IE 9 only, #12537)

//   1. An object of properties

//   1. No key was specified

//   1. The entire cache object

//   2. A key and value

//   2. A string key was specified, but no value provided

//   2. The data stored at the key

//   but not by others (comment: 8; processing instruction: 7; etc.)

//   https://html.spec.whatwg.org/multipage/forms.html#category-listed

//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled

//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled

//  - Node

//  - Object

// "Attribute values must be CSS identifiers [capture 5]

// "Whether an element is represented by a :lang() selector

// "px" to a few hardcoded values.

// #1450: sometimes IE returns 1223 when it should be 204

// #14683: Only rethrow if this hasn't been notified as an error yet

// #9682: remove data so that it's not used in an eventual retry

// ( event )  dispatched jQuery.Event

// ( namespace ) or ( selector, types [, fn] )

// ( types [, fn] )

// ( types, data, fn )

// ( types, fn )

// ( types, selector, fn )

// ( types-Object, data )

// ( types-Object, selector, data )

// ( types-object [, selector] )

// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)

// (and therefore has an element appears at this[ 0 ]) and the

// (avoids potential for endless recursion during removal of special event handlers)

// (excepting DocumentFragment context, where the methods don't exist)

// (excepting IE8 booleans)

// (focus and blur are always synchronous in other supported browsers,

// (focus or blur), assume that the surrogate already propagated from triggering the

// (i.e., `typeof document.createElement( "object" ) === "function"`).

// (it can always be set on a per-request basis or even using ajaxSetup)

// (no matter how long the jqXHR object will be used)

// (returning the new matched element set)

// (such as Node.js), expose a factory as module.exports.

// (the latter of which guarantees us context)

// (via `this.document`) & document (via `this`).

// (we check in cache first)

// * false: [ value ].slice( 0 ) => resolve( value )

// * listed form-associated elements in a disabled fieldset

// * option elements in a disabled optgroup

// * true: [ value ].slice( 1 ) => resolve()

// *native* events that it fires directly, ensuring that state changes have

// ... .then handlers, argument index, [final state]

// ...and capture the result

// ...and disregard older resolution values

// ...but misinterprets leading-number strings, particularly hex literals ("0x...")

// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)

// ...in a gzip-friendly way

// ...intermediate processing is necessary

// ...otherwise use results directly

// .get() because push.apply(_, arraylike) throws on ancient WebKit

// 1) For the element inside the iframe without offsetParent, this method will return

// 1. Copy private data: events, handlers, etc.

// 2) For the hidden or detached element

// 2. Copy user data

// 3) For body or html element, i.e. in case of the html node - it will return itself

// :(first|last|only)-(child|of-type)

// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),

// <object> elements with no `data` attribute has an object

// A central reference to the root jQuery(document)

// A counter to track how many items to wait for before

// A cross-domain request is in order when the origin doesn't match the current origin.

// A fallback to window.onload, that will always work

// A global GUID counter for objects

// A match means we're done; a fail means we have to keep checking

// A simple way to check for HTML strings

// A special extend for ajax options

// A tribute to the "awesome hack by Dean Edwards"

// Abort any current/pending executions

// Abort any pending executions

// Abort handling of the native event

// Abort if not done already and return

// Abort if there are pending holds or we're already ready

// Aborting is no longer a cancellation

// Accept quoted arguments as-is

// Accepts only:

// Accessing document.activeElement can throw unexpectedly

// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)

// Accessing the selectedIndex property

// Accessing this property makes selected-by-default

// Account for positive content-box scroll gutter when requested by providing computedVal

// Account for the *real* offset parent, which can be the document or its root element

// Account for unreliable border-box dimensions by comparing offset* to computed and

// Actual Callbacks object

// Actual callback list

// Add a callback or a collection of callbacks to the list

// Add a progress sentinel to prevent the fx queue from being

// Add button/input type pseudos

// Add elements passing elementMatchers directly to results

// Add elements to results, through postFinder if defined

// Add in properties whose names you wish to fix before

// Add in style property hooks for overriding the default

// Add list-specific methods

// Add matches to results

// Add nodes directly

// Add or update anti-cache param if needed

// Add padding

// Add protocol if not provided (prefilters might expect it)

// Add the old object onto the stack (as a reference)

// Add the remaining (directly-bound) handlers

// Add the top/left cssHooks using jQuery.fn.position

// Add to the element's handler list, delegates in front

// Add which for click: 1 === left; 2 === middle; 3 === right

// Add which for key events

// Adding a temporary attribute to the document before the selection works

// Adjust for the element's box model

// Adjustment may not be necessary

// Alias method option to type as per ticket #12004

// All done!

// All others

// All such elements have a "form" property.

// Allow custom headers/mimetypes and early abort

// Allow instantiation without the 'new' keyword

// Allow onerror to be called first,

// Allow special events to draw outside the lines

// Also disable .add unless we have memory (since it would have no effect)

// Also prevent it if we're currently inside a leveraged native-event stack

// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)

// Also, save errorCallback to a variable

// Always assume duplicates if they aren't passed to the comparison function

// Always return an empty object.

// Always skip document fragments

// Always use camelCase key (gh-2257)

// An input loses its value after becoming a radio

// Anchor tag for parsing the document origin

// Anchor's host property isn't correctly set when s.url is relative

// Android Browser returns percentage for some values,

// Animate inline elements as inline-block

// Animations created synchronously will run synchronously

// Any relative (+/-) values have already been

// Append to fragment

// Apply converter (if not an equivalence)

// Apply custom fields if provided

// Apply postFilter

// Apply prefilters

// Apply relative offset (+=/-=) if specified

// Apply set filters to unmatched elements

// Apply the dataFilter if provided

// Argument "data" should be string of html

// Arraylike of elements (jQuery, arguments, Array)

// As in, an element does not contain itself

// As of jQuery 3.0, isNumeric is limited to

// As well, disconnected nodes are said to be in a document

// Assign to newCache so results back-propagate to previous elements

// Assign undefined instead of using delete, see Data#remove

// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes

// Assume jQuery is ready without the ready module

// Assume position:fixed implies availability of getBoundingClientRect

// Assume that strings that start and end with <> are HTML and skip the regex check

// Assumes a single number if not a string

// Assuming integer scroll gutter, subtract the rest and round down

// Attach a single capturing handler on the document while someone wants focusin/focusout

// Attach callbacks from options

// Attach deferreds

// Attempt to "discover" the data in

// Attempt to get data from the cache

// Attribute hooks are determined by the lowercase version

// Attribute names can contain non-HTML whitespace characters

// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors

// Avoid an infinite loop by temporarily removing this function from the getter

// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression

// Avoid hanging onto element (issue #299)

// Back compat <1.8 extension point

// Bail out if this is a no-op like .hide().hide()

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport

// Base inspection function for prefilters and transports

// Based off of the plugin by Clint Helfers, with permission.

// Because of that, this security measure has to be disabled in Safari 8.

// Behaves like an Array's method, not like a jQuery method.

// Behavior in IE 9 is more subtle than in newer versions & it passes

// Bind a function to a context, optionally partially applying any

// Bind script tag hack transport

// Black-hole SVG <use> instance trees (trac-13180)

// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347

// Boolean attributes and "value" are not treated correctly

// Boolean properties

// Both box models exclude margin

// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)

// Build QSA regex

// Build a new jQuery matched element set

// Building a settings object

// Builds headers hashtable if needed

// Bulk operations run against the entire set

// But maintain support for old signatures

// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too

// CONCATENATED MODULE: ./src/js/_btn-bar-animation.js

// CONCATENATED MODULE: ./src/js/_btn-default.js

// CONCATENATED MODULE: ./src/js/jquery.button-audio-player.js

// CSS escapes

// CSS string/identifier serialization

// Cache response headers

// Cache the compiled function

// Cache the index of each encountered element

// Cache the tokens

// Caches the header

// Calculate position if both inputs belong to the same document

// Call a native DOM method on the target with the same name as the event.

// Call all callbacks with the given context and arguments

// Call all the callbacks with the given arguments

// Call an optional hook to record the stack, in case of exception

// Call given func if any

// Call if it was a function and we have a response

// Call the postDispatch hook for the mapped type

// Call the preDispatch hook for the mapped type, and let it bail if desired

// Callback

// Callback for when everything is done

// Callbacks context

// Caller can pass in a jQuery.Event object, Object, or just an event type string

// Caller can pass in an object of custom data in lieu of the handler

// Can add propHook for "elements" to filter or add form elements

// Can be adjusted by the user

// Can use an empty set, since event contains the info

// Can't trust NodeList.length

// Cancel the outer synthetic event

// Cancel the request

// Capture executables

// Capture the context ID, setting it first if necessary

// Cast descendant combinators to space

// Catch cases where $(document).ready() is called

// Certain elements can have dimension info if we invisibly show them

// Check against all ancestor/preceding elements

// Check against closest ancestor/preceding element

// Check attachment across shadow DOM boundaries when possible (gh-3504)

// Check each className given, space separated list

// Check for headers option

// Check for inherited disabledness on relevant non-disabled elements:

// Check for promise aspect first to privilege synchronous behavior

// Check for vendor prefixed names

// Check if a given callback is in the list.

// Check if b follows a

// Check if getElementById returns elements by name

// Check if getElementsByTagName("*") returns only elements

// Check if module is in cache

// Check if the owner object already has a cache

// Check if we're dealing with a known content-type

// Check if we're setting a value

// Check readyState before timeout as it changes

// Check state lost if the name is set (#11217)

// Check to see if it's possible to do matchesSelector

// Check to see if we have a response for the expected dataType

// Choose the first element that is related to our preferred document

// Claim the first handler

// Class

// Class selector

// Clean up if we're done firing for good

// Clean up the event in case it is being reused

// Clean-up function (fires after converters)

// Clear all callbacks and values

// Clear input after sorting to release objects

// Clear timeout if it exists

// Clear up the last queue stop function

// Clone any incoming data and prepend the event, creating the handler arg list

// Coalesce documents and windows

// Combinators

// Comma and first run

// Compile and execute a filtering function if one is not provided

// Complete

// Condense equivalence converters

// Console exists when dev tools are open, which can happen at any time

// Contents

// Context for global events is callbackContext if it is a DOM node or jQuery collection

// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:

// Convert "+=" or "-=" to relative numbers (#7345)

// Convert "normal" to computed value

// Convert String-formatted options into Object-formatted ones

// Convert anything to text

// Convert dashed to camelCase; used by the css and data modules

// Convert data if not already a string

// Convert html into DOM nodes

// Convert no matter what (that way responseXXX fields are always set)

// Convert non-html into a text node

// Convert options from String-formatted to Object-formatted if needed

// Convert response if prev dataType is non-auto and differs from current

// Convert to each sequential dataType

// Convert to pixels if value adjustment is needed

// Copy the events from the original to the clone

// Copy the properties one-by-one to the cache object

// Counter for holding the number of active queries

// Create a new module (and put it into the cache)

// Create a timestamp if incoming event doesn't have one

// Create converters map with lowercased keys

// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods

// Create mouseenter/leave events using mouseover/out and event-time checks

// Create scrollLeft and scrollTop methods

// Create target properties

// Create the abort callback

// Create the final options object

// Creates a full fledged settings object into target

// Cross domain only allowed if supported through XMLHttpRequest

// Cross-browser xml parsing

// Data converters

// Default abort message

// Default jsonp settings

// Default process is resolve

// Default speed

// Default value for a checkbox should be "on"

// Defend against cloned attroperties (jQuery gh-1709)

// Deferred helper

// Deferred#then to conditionally suppress rejection.

// Deferreds

// Define a local copy of jQuery

// Define the hook, we'll check on the first run if it's really needed.

// Defining this global in .eslintrc.json would create a danger of using the global

// Delegate to script

// Deprecated

// Dereference transport for early garbage collection

// Descend through wrappers to the right content

// Deserialize a standard representation

// Detach an event or set of events from an element

// Detached nodes confoundingly follow *each other*

// Detect misreporting of content dimensions for box-sizing:border-box elements

// Detect obvious negatives

// Detect overflow:scroll screwiness (gh-3699)

// Detect show/hide animations

// Detect silently failing push.apply

// Detect, normalize options and install callbacks for jsonp requests

// Determine event propagation path in advance, per W3C events spec (#9951)

// Determine handlers

// Determine if request has content

// Determine if successful

// Determine new display value for elements that need to change

// Determine the position of an element within the set

// Disable .fire

// Disable .fire and .add

// Discard index placeholder values to get only actual matches

// Discard the second event of a jQuery.event.trigger() and

// Disconnected elements can have computed display: none, so first confirm that elem is

// Disconnected nodes

// Do a sibling check if the nodes have a common ancestor

// Do not include comment or processing instruction nodes

// Do not traverse comment nodes

// Do send the request (this may raise an exception)

// Do the same for pointerenter/pointerleave and pointerover/pointerout

// Document context

// Document order sorting

// Don't automatically add "px" to these possibly-unitless properties

// Don't check non-elements (#13208)

// Don't conflict with Object.prototype properties (#13203)

// Don't consume trailing commas as valid

// Don't do default actions on window, that's where global variables be (#6170)

// Don't do events on text and comment nodes

// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)

// Don't get fooled by Object.prototype properties (jQuery #13807)

// Don't get tricked when zoom affects offsetWidth (gh-4029)

// Don't get/set attributes on text, comment and attribute nodes

// Don't get/set properties on text, comment and attribute nodes

// Don't keep the element (issue #299)

// Don't match elem in the :animated selector

// Don't pass non-elements to Sizzle

// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)

// Don't re-trigger an onFOO event when we call its FOO() method

// Don't return options that are disabled or in a disabled optgroup

// Don't set styles on text and comment nodes

// ESM COMPAT FLAG

// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js

// Early iOS 10 versions support `attachShadow` but not `getRootNode`,

// Easily-parseable/retrievable ID or TAG or CLASS selectors

// Easy API for creating new setFilters

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1

// Element contains another

// Element context

// Element/input types

// Empty animations, or finishing resolves immediately

// Empty the queue first

// Enable finishing flag on private data

// Enforce case-sensitivity of name attribute

// Enforce single-firing

// Ensure a hooks for this queue

// Ensure proper type for the source value

// Ensure that invalid selectors throw exceptions at attach time

// Ensure the complete handler is called before this completes

// Ensure the created nodes are orphaned (#12392)

// Ensure the presence of an event listener that handles manually-triggered

// Evaluate against documentElement in case elem is a non-element node (e.g., document)

// Evaluate and update our best guess (doubling guesses that zero out).

// Evaluate executable scripts on first document insertion

// Evaluate text as a json expression

// Evaluates a script in a provided context; falls back to the global one

// Event object

// Events bubbling up the document may have been marked as prevented

// Exclude object elements

// Exclude scripts to avoid IE 'Permission Denied' errors

// Execute a callback for every element in the matched set.

// Execute callbacks for all pending executions,

// Execute immediately if ready is not present

// Execute the appropriate callbacks

// Execute the module function

// Executing both pixelPosition & boxSizingReliable tests require only one layout

// Exit early if the nodes are identical

// Expand context for sibling selectors

// Expose jQuery and $ identifiers, even in AMD

// Expose support vars for convenience

// Extend jQuery itself if only one argument is passed

// Extend the base object

// Extend with the prototype to reset the above stopImmediatePropagation()

// Extending ajaxSettings

// Extract dataTypes list

// Extract error from statusText and normalize for non-aborts

// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)

// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"

// Fails to persist the checked state of a cloned checkbox or radio button.

// Fake xhr

// Fall back on getElementsByName

// Fall back to offsetWidth/offsetHeight when value is "auto"

// Fallback to prop when attributes are not supported

// Fallback to seeking `elem` from the start

// Fetch a seed set for right-to-left matching

// File protocol always yields status code 0, assume 200

// File: protocol always yields status 0; see #8605, #14207

// Filter out possible comments

// Filters

// Find delegate handlers

// Find primary matches

// Find the next relative operator (if any) for proper handling

// Finish early in limited (non-browser) environments

// Finish if the scale equals or crosses 1 (making the old*new product non-positive).

// Fire an inner synthetic event with the original arguments

// Fire callbacks

// Fire handlers on the event path

// Firefox doesn't alert if the returnValue field is not set.

// Firefox doesn't have focus(in | out) events

// Fix IE bugs, see support tests

// Fix IE cloning issues

// Fix name and attach hooks

// Fixes #9887

// Fixes bug #9237

// Flag for duplicate removal

// Flag the module as loaded

// Flag to know if list is currently firing

// Flag to know if list was already fired

// Flag to prevent firing

// Flatten any nested arrays

// For "border" or "margin", add border

// For "content" or "padding", subtract border

// For "content", subtract padding

// For CommonJS and CommonJS-like environments where a proper `window`

// For Promises/A+, convert exceptions into rejections

// For XHR2 non-text, let the caller handle it (gh-2498)

// For cross-browser consistency, suppress native .click() on links

// For cross-domain requests, seeing as conditions for a preflight are

// For each dataType in the dataTypeExpression

// For environments that do not have a `window` with a `document`

// For internal use only.

// For mouseenter/leave call the handler if related is outside the target.

// For mutual compressibility with _default, replace `this` access with a local var.

// For options that shouldn't be deep extended:

// For same-domain requests, won't change header if already provided.

// For use in libraries implementing .is()

// For values outside the Basic Multilingual Plane (BMP), manually construct a

// Force browsers to behave consistently when non-matching value is set

// Force callback invocation

// Force json dataType

// Force options to be an object

// Force setup before trigger

// Force setup before triggering a click

// Forget the data if we're done with it

// Gecko does not error, returns false instead

// General show/hide setup for this element animation

// Generate a function of recursive functions that can be used to check each element

// Generate parameters to create a standard animation

// Generate shortcuts for custom animations

// Get a promise for this deferred

// Get a promise resolved when queues of a certain type

// Get and set the style property on a DOM Node

// Get callback name, remembering preexisting value associated with it

// Get document width or height

// Get document-relative position by adding viewport scroll to viewport-relative gBCR

// Get excess from tokenize (recursively)

// Get initial elements from seed or context

// Get nonempty value(s) by temporarily forcing visibility

// Get response data

// Get the Nth element in the matched element set OR

// Get the final matcherOut by condensing this intermediate into postFinder contexts

// Get the specific value for the option

// Get the whole matched element set as a clean array

// Get transport

// Get width or height on the element, requesting but not forcing parseFloat

// Gets

// Gets all values

// Gets hook for the prefixed version, then unprefixed version

// Give the init function the jQuery prototype for later instantiation

// Go through every key on the object,

// Go through the array, only saving the items

// Go through the array, translating each of the items to their new values

// Go to the end state if fx are off

// Grab necessary hook if one is defined

// Guard against undefined "subtract", e.g., when used as in cssHooks

// HANDLE: $(""), $(null), $(undefined), $(false)

// HANDLE: $(#id)

// HANDLE: $(DOMElement)

// HANDLE: $(expr, $(...))

// HANDLE: $(html) -> $(array)

// HANDLE: $(html, props)

// HTML5 custom data-* attrs

// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)

// Handle HTML strings

// Handle a deep copy situation

// Handle a returned thenable

// Handle cache's special case and crossDomain

// Handle case when target is a string or something (possible in deep copy)

// Handle event binding

// Handle falsy url in the settings object (#10093: consistency with old signature)

// Handle firing indexes

// Handle iff the expected data type is "jsonp" or we have a parameter to set

// Handle it asynchronously to allow scripts the opportunity to delay ready

// Handle most common string cases

// Handle multiple events separated by a space

// Handle state

// Handle the global AJAX counter

// Handle when the DOM is ready

// Handle: [ owner, key, value ] args

// Handle: [ owner, { properties } ] args

// Handle: regular nodes (via `this.ownerDocument`), window

// Headers (they are sent all at once)

// Hook needed; redefine it so that the support test is not executed again.

// Hook not needed (or it's not possible to use it due

// Hooks for boolean attributes

// However, it is not slated for removal any time soon

// ID filter and find

// ID selector

// IE 11/Edge don't find elements on a `[name='']` query in some cases.

// IE 9's matchesSelector returns false on disconnected nodes

// IE <=9 replaces <option> tags with their contents when inserted outside of

// IE returns zIndex value as an integer.

// IE throws exception on accessing the href property if url is malformed,

// IE throws on elements created in popups

// IE throws on parseFromString with invalid input.

// IE's :disabled selector does not pick up the children of disabled fieldsets

// IE/Edge & older browsers don't support the :scope pseudo-class.

// IE/Edge misreport `getComputedStyle` of table rows with width/height

// IE/Edge sometimes throw a "Permission denied" error when strict-comparing

// IE8 throws error here and will not see later tests

// IE8-9 doesn't update selected after form reset (#2551)

// IE9 has no XHR2 but throws on binary (trac-11426)

// Identify a display type, preferring old show/hide data over the CSS cascade

// If "type" variable is undefined, then "GET" method will be used.

// If a hook was provided get the computed value from there

// If a hook was provided get the non-computed value from there

// If a hook was provided, use that value, otherwise just set the specified value

// If a normal DOM Ready event fired, decrement, and wait if need be

// If a number was passed in, add the unit (except for certain CSS properties)

// If a selector was specified, locate the right elements in a dummy div

// If an array was passed in, assume that it is an array of form elements.

// If conv2 outputs current

// If curCSS returns percentage, fallback to offset

// If data is available and should be processed, append data to url

// If event changes its type, use the special event handlers for the changed type

// If it is a node unlikely to be stringify-ed or looped over

// If it receives a jQuery object, the first element is used

// If it's a function

// If key is an array of keys...

// If no argument is given, return whether or not list has callbacks attached.

// If no nodeType, this is expected to be an array

// If no transport, we auto-abort

// If nobody prevented the default action, do it now

// If none found, seek a pair

// If not, create one

// If nothing was found internally, try to fetch any

// If obj is provided, the promise aspect is added to the object

// If prev can be converted to accepted input

// If previous value didn't exist - remove it

// If request was aborted inside a prefilter, stop there

// If request was aborted inside ajaxSend, stop there

// If seed is empty or no tokens remain, we can return early

// If selector defined, determine special event api type, otherwise given type

// If set returns undefined, fall back to normal setting

// If successful, handle type chaining

// If target is omitted, writes into ajaxSettings.

// If the element has a class name or if we're passed `false`,

// If the event is namespaced, then each handler is only invoked if it is

// If the fx queue is dequeued, always remove the progress sentinel

// If the nodes are siblings, we can do a quick check

// If the preceding token was a descendant combinator, insert an implicit any-element `*`

// If the selector is sufficiently simple, try using a "get*By*" DOM method

// If there are functions bound, to execute

// If there is an error parsing the URL, assume it is crossDomain,

// If there's more to do, yield

// If this is a native event triggered above, everything is now in order

// If this is a positional/relative selector, check membership in the returned set

// If this is an inner synthetic event for an event with a bubbling surrogate

// If this was an empty animation, synthesize a final progress notification

// If traditional, encode the "old" way (the way 1.3.2 or older

// If url is an object, simulate pre-1.5 signature

// If value is a function, invoke it and use its return value

// If we are going to the end, we want to run all the tweens

// If we found a dataType

// If we get here with a content-box, we're seeking "padding" or "border" or "margin"

// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,

// If we have elements to modify, make the request

// If we have memory from a past run, we should fire after adding

// If we include width, step value is 1 to do all cssExpand values,

// Ignore double-resolution attempts

// Ignore post-resolution exceptions

// Ignore repeat invocations

// Implement show/hide animations

// Implement the identical functionality for filter and not

// In CSS3, :checked should return both checked and selected elements

// In IE/Edge using regex groups here causes severe slowdowns.

// In Safari 8 documents created via document.implementation.createHTMLDocument

// In cases where either:

// In some browsers, typeof returns "function" for HTML <object> elements

// In such cases, we work around the behavior by prefixing every selector in the

// In those cases, the computed value can be trusted to be border-box.

// In-page `selector#id sibling-combinator selector` fails

// Includes all common event props including KeyEvent and MouseEvent specific props

// Incorporate borders into its offset, since they are outside its content origin

// Incorporate the offset, then check against cycle size

// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that

// Index in selector

// Index of currently firing callback (modified by add/remove as needed)

// Init the element's event structure and main handler, if this is the first

// Init the event handler queue if we're the first

// Initialize a jQuery object

// Initialize against the default document

// Initialize central reference

// Inject the element directly into the jQuery object

// Inline style trumps all

// Insert callback into url or form data

// Inspect recursively

// Install callback

// Install callbacks on deferreds

// Install script dataType

// Instance methods

// Instance-specific data

// Intentionally let the error be thrown if parseHTML is not present

// Interestingly, IE 10 & older don't seem to have the issue.

// Interestingly, in some cases IE 9 doesn't suffer from this issue.

// Interrupt processing of the outer synthetic .trigger()ed event

// Is the DOM ready to be used? Set to true once it occurs.

// Item is non-scalar (array or object), encode its numeric index.

// Iteratively approximate from a nonzero starting point

// Jump to end and forget the data so .add doesn't re-fire

// Keep an empty list if we have data for future add calls

// Keep pipe for back-compat

// Keep references to cloned scripts for later restoration

// Keep track of which events have ever been used, for event optimization

// Keys separate source (or catchall "*") and destination types with a single space

// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable

// Last fire value for non-forgettable lists

// Last-Modified header cache for next request

// Lazy-add the new callbacks in a way that preserves old ones

// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter

// Lengthen the array for every element, matched or not

// Leverage slice if possible

// Listen to events

// Load entry module and return exports

// Local document vars

// Look for any active animations, and finish them

// Look for any animations in the old queue and finish them

// Loop through all the selected options

// Loop variable

// Main method

// Make a writable jQuery.Event from the native event object

// Make numeric if forced or a qualifier was provided and val looks numeric

// Make sure textarea (and checkbox) defaultValue is properly cloned

// Make sure that null and NaN values aren't set (#7116)

// Make sure that re-using the options doesn't screw things around

// Make sure that the handler has a unique ID, used to find/remove it later

// Make sure that we're working with the right name

// Make sure that we're working with the right name. We don't

// Make sure the element is visible & connected

// Make sure we set the data so it isn't changed later

// Make sure we trim BOM and NBSP

// Make sure we update the tween properties later on

// Make the changes, replacing each non-ignored context element with the new content

// Make the deferred a promise

// Make this explicit, since user can override this through ajaxSetup (#11264)

// Make value of this field explicit since

// Map over jQuery in case of overwrite

// Map over the $ in case of overwrite

// Map tuples (progress, done, fail) to arguments (done, fail, progress)

// Margin is only for outerHeight, outerWidth

// Mark it as fixed

// Mark scripts as having already been evaluated

// Match elements found at the specified indexes

// Match elements unmatched by `matcher`

// Match html or make sure no context is specified for #id

// Matches dashed string for camelizing

// Method init() accepts an alternate rootjQuery

// Methods guaranteed to produce a unique set when starting from a unique set

// Microsoft forgot to hump their vendor prefix (#9572)

// Miscellaneous

// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add

// More options handling for requests with no content

// Move matched elements from seed to results to keep them synchronized

// Move the given value to match[3] whether quoted or unquoted

// Multi-Selects return an array

// Multifunctional method to get and set values of a collection

// Multiple arguments are aggregated like Promise.all array elements

// Must access selectedIndex to make default options select

// NB: No relatedTarget if the mouse left/entered the browser window

// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`

// Namespaced trigger; create a regexp to match event type in handle()

// Native handler

// Need init if jQuery is called (just allow error to be thrown if not included)

// Need to be able to calculate position if either

// Never move original objects, clone them

// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"

// No argument, return index in parent

// Normalize "" and auto

// Normalize opt.queue - true/undefined/null -> "fx"

// Not public - generate a queueHooks object, or return the current one

// Not quite $.extend, this won't overwrite existing keys.

// Nothing should be selected when empty strings follow ^= or $= or *=

// Nullify the div so it wouldn't be stored in the memory and

// Object.prototype.hasOwnProperty.call

// Objects with no prototype (e.g., `Object.create( null )`) are plain

// Objects with prototype are plain iff they were constructed by a global Object function

// Old Firefox doesn't throw on a badly-escaped identifier.

// Older IE sometimes signals "interactive" too soon

// Older WebKit doesn't clone checked state correctly in fragments

// On a manual native abort, IE9 throws

// On the other hand, just using `getAttribute` is not enough as

// Once for each type.namespace in types; type may be omitted

// One-time assignments

// Only add window if we got to document (e.g., not plain obj or detached DOM)

// Only assign if different to avoid unneeded rendering.

// Only attach events to objects that accept data

// Only certain elements can match :enabled or :disabled

// Only check objects and functions for thenability

// Only convert to a number if it doesn't change the string

// Only deal with non-null/undefined values

// Only evaluate the response if it is successful (gh-4126)

// Only keep the most recent entries

// Only normal processors (resolve) catch and reject exceptions

// Only read styles.position if the test has a chance to fail

// Only substitute handlers pass on context

// Only use addEventListener if the special events handler returns false

// Opera 10-11 does not throw on post-comma invalid pseudos

// Operate on a copy of prop so per-property easing won't be lost

// Operator (capture 2)

// Optimize for push.apply( _, NodeList )

// Option elements defer to a parent optgroup if present

// Option to run scripts is true for back-compat

// Optional AJAX dependency, but won't run scripts if not present

// Or just use first one

// Other potentially-special ASCII characters get backslash-escaped

// Otherwise append directly

// Otherwise bring back whatever was previously saved (if anything),

// Otherwise just get the value from the style object

// Otherwise nodes in our document sort first

// Otherwise use the full result

// Otherwise we know they are disconnected

// Otherwise we need full lists of their ancestors for comparison

// Otherwise, check computed style

// Otherwise, if a way to get the computed value exists, use that

// Otherwise, throw an error or return tokens

// Override manipulation of globals by nested matchers

// Override mime type if needed

// Overrides response content-type header

// Panic based approach to setting things on disconnected nodes

// Parentless nodes are either documents or disconnected

// Parse text as xml

// Pass this if window is not defined yet

// Passing an empty string as a 3rd parameter to .css will automatically

// Per-property setup

// Piggyback on a donor event to simulate a different one

// Populate the class2type map

// Position-in-collection

// Positional selectors never match, since there's no _selection_ context

// Potentially complex pseudos

// Precompiled matchers will still verify ancestry, so step up a level

// Prefer a tbody over its parent table for containing new rows

// Prefilter to get matcher input, preserving a map for seed-results synchronization

// Prefix every selector in the list

// Prepend if requested

// Preserve chaining for setter

// Preserve script evaluation history

// Pretend to be hidden if this is a "show" and

// Prevent Object.prototype pollution

// Prevent attribute/property "interpolation"

// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)

// Prevent memory leaks

// Prevent never-ending loop

// Prevent re-triggering of the same event, since we already bubbled it above

// Prevent triggered image.load events from bubbling to window.load

// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)

// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters

// Process the value(s)

// Propagate others as results

// Properties of context are called as methods if possible

// Provide `match` to avoid retokenization if we modified the selector above

// Provide the current computed size to request scroll gutter calculation (gh-3589)

// Purposefully self-exclusive

// Put explicitly provided properties onto the event object

// Put hash and anti-cache on the URL that will be requested (gh-1732)

// Put in the new values to get a computed value out

// QSA and matchesSelector support

// Queue of execution data for repeatable lists

// Queue-skipping animations hijack the fx hooks

// Queueing

// Quick check to determine if target is callable, in the spec

// Radios and checkboxes getter/setter

// Raw string

// Re-resolve promises immediately to dodge false rejection from

// Record all 3 overflow attributes because IE does not infer the shorthand

// Recurse if we're merging plain objects or arrays

// Reduce context if the leading compound selector is an ID

// Reenable scripts

// Regex strategy adopted from Diego Perini

// Register the controller as a special universal handler for all event namespaces

// Regular expressions

// Reintegrate element matches to eliminate the need for sorting

// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857

// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787

// Remaining elements are neither :enabled nor :disabled

// Remember that setFilters inherits from pseudos

// Remember that the DOM is ready

// Remember the hash so we can put it back

// Remember the old values, and insert the new ones

// Remember the original values

// Remember the top-level container

// Remember what we're overwriting

// Remove *all* instances

// Remove a callback from the list

// Remove all callbacks from the list

// Remove any remaining nodes

// Remove auto dataType and get content-type in the process

// Remove boolean attributes when set to false

// Remove data and the expando if it's no longer used

// Remove duplicates

// Remove element nodes and prevent memory leaks

// Remove from its parent by default

// Remove generic event handler if we removed something and no more handlers exist

// Remove hash to simplify url manipulation

// Remove matching events

// Remove the expando if there's no more data

// Remove wrapper from fragment

// Removing the function wrapper causes a "Permission Denied"

// Replace a hexadecimal escape sequence with the encoded Unicode code point

// Replace/restore the type attribute of script elements for safe DOM manipulation

// Request state (becomes false upon send and true upon completion)

// Resolve the animation and report its conclusion

// Resolve when we played the last frame; otherwise, reject

// Response headers

// Restore matcherIn since elem is not yet a final match

// Restore the original display value at the end of pure show/hide animations

// Restrict "overflow" and "display" styles during box animations

// Rethrow post-completion exceptions

// Retrieve `then` only once

// Retrieving style before computed somehow

// Return a confounding non-pixel value or feign ignorance, as appropriate.

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property

// Return a vendor-prefixed property or undefined

// Return all the elements in a clean array

// Return early from calls with invalid selector or context

// Return early if doc is invalid or already selected

// Return false to allow normal processing in the caller

// Return jQuery for attributes-only inclusion

// Return just the one element from the set

// Return non-false to allow normal event-path propagation

// Return special upon seeing a positional matcher

// Return the cloned set

// Return the exports of the module

// Return the length of the invalid excess

// Return the modified object

// Return the newly-formed element set

// Return the resulting serialization

// Return zeros for disconnected and hidden (display: none) elements (gh-2310)

// Reuse newcache so results back-propagate to previous elements

// Reusing 'index' because we have the correct "name"

// Reverse direction for :only-* (if we haven't yet done so)

// Reverse order for parents* and prev-derivatives

// Revert the changed values

// Revert the old values

// Run callback and check for early termination

// Run delegates first; they may want to stop propagation beneath us

// Run the timer and safely remove it when done (allowing for external removal)

// Running getBoundingClientRect on a

// Running getBoundingClientRect on a disconnected node

// Safari 4 - 5 only, Opera <=11.6 - 12.x only

// Safari 6.0 supports :scope but it's an alias of :root there.

// Safari sends mouseenter too often; see:

// Save back as free

// Save response for use in complete callback

// Save selector and tokenization

// Save the URL in case we're toying with the If-Modified-Since

// Save the callback name for future use

// Saved data should be false in such cases, but might be a leftover capture object

// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display

// See https://bugs.jquery.com/ticket/13378

// See https://connect.microsoft.com/IE/feedback/details/1736512/

// See https://github.com/jquery/sizzle/pull/225

// See https://github.com/whatwg/html/issues/2369

// See https://html.spec.whatwg.org/#nonce-attributes

// See if we can take a shortcut and just use innerHTML

// See setDocument()

// See ticket #14549 for more info.

// Seedless set matches succeeding multiple successful matchers stipulate sorting

// Seek `elem` from a previously-cached index

// Seek a direct converter

// Select is set to empty string on purpose

// Send global event

// Serialize an array of form elements or a set of

// Serialize array item.

// Serialize object item.

// Serialize scalar item.

// Serialize the form elements

// Set data for the fake xhr object

// Set document vars if needed

// Set headers

// Set position first, in-case top/left are set even on static elem

// Set readyState

// Set the Accepts header for the server, depending on the dataType

// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.

// Set the base href for the created document

// Set the correct header, if data is being sent

// Set the data...

// Set the display of the elements in a second loop to avoid constant reflow

// Set the guid of unique handler to the same of original handler, so it can be removed

// Set width or height on the element

// Sets many values

// Sets multiple values

// Sets one value

// Shift arguments if data argument was omitted

// Shortcut for :nth-*(n)

// Shortcut simple #id case for speed

// Should return 1, but returns 4 (following)

// Show any hidden elements after setting opacity to 0

// Show elements before animating them

// Simple values such as "10px" are parsed to Float;

// Simulated bind

// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in

// Since we force visibility upon cascade-hidden elements, an immediate (and slow)

// Single element

// Single tag

// Single- and empty arguments are adopted like Promise.resolve

// Skip elements already in the context collection (trac-4087)

// Skip the boolean and the target

// So expect focus to be synchronous when the element is already active,

// So, we allow :focus to pass through QSA all the time to avoid the IE error

// Some browsers don't support the "nonce" property on scripts.

// Some styles come back with percentage values, even though they shouldn't

// Sort on method existence if only one input has compareDocumentPosition

// Sort stability

// Special processors (notify) just wait for resolution

// Speed up dequeue by getting out quickly if this is just a lookup

// Start the next in the queue if the last step wasn't forced.

// Start with computed style

// Starting value computation is required for potential unit mismatches

// Status-dependent callbacks

// Stop scripts or inline event handlers from being executed immediately

// Store arguments for use when handling the inner native event

// Store className if set

// Store hidden/visible for toggle so `.stop().toggle()` "reverses"

// Strict HTML recognition (#11290: must start with <)

// Strict mode functions invoked without .call/.apply get global-object context

// Strip and collapse whitespace

// Strip and collapse whitespace according to HTML spec

// Style of cloned element affects source element cloned (#8908)

// Subtract parent offsets and element margins

// Success/Error

// Support array or space separated string of keys

// Support: Android 4.0 - 4.3 only

// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44

// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3

// Support: Android 4.0 only

// Support: Android <=2.3 only

// Support: Android <=2.3 only (functionish RegExp)

// Support: Android <=4.0 only

// Support: Android <=4.0 only, PhantomJS 1 only

// Support: Android <=4.1 - 4.3 only

// Support: Android <=4.1 only

// Support: Android <=4.3 only

// Support: Android<4.0

// Support: Chrome 14-35+

// Support: Chrome <=35 - 45

// Support: Chrome <=35 - 45+

// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1

// Support: Chrome <=57, Firefox <=52

// Support: Chrome <=64

// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+

// Support: Firefox 20+

// Support: Firefox 51+

// Support: Firefox 64+, Edge 18+

// Support: Firefox <=3.6 - 5 only

// Support: Firefox <=42

// Support: Firefox <=43 - 45

// Support: Firefox <=44

// Support: Firefox <=54

// Support: IE 10 - 11+, Edge 15 - 18+

// Support: IE 11 only

// Support: IE 11+

// Support: IE 11+, Edge 15 - 18+

// Support: IE 11+, Edge 17 - 18+

// Support: IE 11, Edge

// Support: IE 6 - 7 only

// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,

// Support: IE 8 - 9 only

// Support: IE 8 only

// Support: IE 9 - 11 only

// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only

// Support: IE 9 - 11+, Edge 12 - 18+

// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only

// Support: IE 9 - 11+, Edge 15 - 18+

// Support: IE 9 only

// Support: IE <9 only

// Support: IE <=10 - 11 only

// Support: IE <=10 - 11, Edge 12 - 13 only

// Support: IE <=11 only

// Support: IE <=11 only, Firefox <=30 (#15098, #14150)

// Support: IE <=11+

// Support: IE <=8

// Support: IE <=8 - 11 only

// Support: IE <=8 - 11, Edge 12 - 15

// Support: IE <=9

// Support: IE <=9 - 10 only

// Support: IE <=9 - 11 only

// Support: IE <=9 - 11+

// Support: IE <=9 - 11, Edge 12 - 15

// Support: IE <=9 only

// Support: IE, Opera, Webkit

// Support: IE8

// Support: IE8, Opera 11-12.16

// Support: IE9-11+

// Support: IE<10

// Support: IE<8

// Support: IE<9

// Support: IE<9, Safari

// Support: Opera 10 - 11 only

// Support: Promises/A+ section 2.3.1

// Support: Promises/A+ section 2.3.3.3.1

// Support: Promises/A+ section 2.3.3.3.3

// Support: Promises/A+ section 2.3.3.3.4.1

// Support: Promises/A+ section 2.3.4

// Support: Promises/A+ sections 2.3.3.1, 3.5

// Support: Safari 6.0 only

// Support: Safari 7 only

// Support: Safari 8 only

// Support: Safari 8+

// Support: Safari 8+, iOS 8+

// Support: Safari <=6 - 7 only

// Support: Safari <=7 - 9.1, Chrome <=37 - 49

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)

// Support: Windows 8 Native Apps

// Support: Windows Web Apps (WWA)

// Support: iOS 10.0-10.2 only

// Support: real iOS 8.2 only (not reproducible in simulator)

// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)

// Swappable if display is none or starts with table

// TODO: Now that all calls to _data and _removeData have been replaced

// TODO: identify versions

// Table columns in Safari have non-zero offsetWidth & zero

// Tag

// Take advantage of querySelectorAll

// Take an array of elements and push it onto the stack

// Take the "read" path and allow the get method to determine

// Target should not be a text node (#504, #13143)

// Text to html (true = no transformation)

// Thanks to Andrew Dupont for this technique.

// The `node.getAttribute` check was added for the sake of

// The attrs elements can be null (#14894)

// The broken getElementById methods don't pick up programmatically-set names,

// The calling jQuery object (element matches) is not empty

// The current version of jQuery being used

// The default length of a jQuery object is 0

// The deferred used on DOM ready

// The elements to wrap the target around

// The final step of a "hide" animation is actually hiding the element

// The foundational matcher ensures that elements are reachable from top-level context(s)

// The getter ensures a default option is selected

// The identifier C does not have to be a valid language name."

// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append

// The jQuery object is actually just the init constructor 'enhanced'

// The key will always be camelCased in Data

// The matching of C against the element's language value is performed case-insensitively.

// The module cache

// The ready event handler and self cleanup method

// The require function

// The technique has to be used as well when a leading combinator is used

// The test attribute must be unknown in Opera but "safe" for WinRT

// The type and name attributes are restricted during .innerHTML assignment

// The url can be an options object (which then must have .url)

// The user may use createPseudo to indicate that

// The value/s can optionally be executed if it's a function

// There *must* be a type, no attaching namespace-only handlers

// There will always be at least one argument (an event object), so this array

// There's only work to do if current dataType is non-auto

// These hooks are used by animate to expand properties

// These usually indicate a programmer mistake during development,

// They will have gone through all possible matchers

// This "if" is needed for plain objects

// This accentuates the need for the creation of a real `window`.

// This corresponds to the behavior of CSS absolute positioning

// This expression is here for better compressibility (see addClass)

// This happens for inline elements with no explicit setting (gh-3571)

// This is a singleton, we need to execute it only once

// This is against the CSSOM draft spec:

// This is to test IE's treatment of not explicitly

// This logic, however, is not guaranteed and can change at any point in the future

// This method will return documentElement in the following cases:

// This should fail with an exception

// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the

// This transport only deals with cross domain or forced-by-attrs requests

// Timeout

// Timers currently will call their complete callbacks, which

// To know if global events are to be dispatched

// To know if the callbacks have already been called at least once

// Toggle individual class names

// Toggle whole class name

// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id

// Track unmatched elements for set filters

// Traverse its children

// Treat each array item as a scalar.

// Treat null/undefined as ""; convert numbers to string

// Treat the template element as a regular one in browsers that

// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)

// Trigger the native event and capture its result

// Trim the selector passed to compile

// Trust units reported by jQuery.css

// Try convertible dataTypes

// Try prefixed name followed by the unprefixed name

// Try to minimize operations if there is only one selector in the list and no seed

// Try to shortcut find operations (as opposed to filters) in HTML documents

// Turn off finishing flag

// Type selector

// Types can be a map of types/handlers

// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER

// URL without anti-cache param

// Un-match failing elements by moving them back to matcherIn

// Unbind all events (on this namespace, if provided) for the element

// Unique for each copy of jQuery on the page

// Unless errors are allowed to bubble, catch and return them

// Unless we *know* we can detect duplicates, assume their presence

// Update global variables

// Update special based on newly reset type

// Uppercase the type

// Url cleanup var

// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)

// Use .is( ":disabled" ) so that fieldset[disabled] works

// Use .style if available and use plain properties where available.

// Use IE sourceIndex if available on both nodes

// Use a noop converter for missing script

// Use a property on the element directly when it is not a DOM element,

// Use a stripped-down indexOf as it's faster than native

// Use cssHook if its there.

// Use data converter to retrieve json after script execution

// Use defaultValue in place of getAttribute("value")

// Use getAttributeNode to fetch booleans when getAttribute lies

// Use integer dirruns iff this is the outermost matcher

// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)

// Use native DOM manipulation to avoid our domManip AJAX trickery

// Use offsetWidth/offsetHeight for when box sizing is unreliable.

// Use onreadystatechange to replace onabort

// Use previously-cached element index if available

// Use proper attribute retrieval(#12072)

// Use same guid so caller can remove using origFn

// Use step hook for back compat.

// Use textContent for elements

// Use the fix-ed jQuery.Event rather than the (read-only) native event

// Use the handy event callback

// Use the original fragment for the last item

// Use the same loop as above to seek `elem` from the start

// Use toString instead of jQuery.type to catch host objects

// Use typeof to avoid zero-argument method invocation on host objects (#15151)

// Used by camelCase as callback to replace()

// Used for iframes

// Used only for `focus(in | out)` events

// Utilize native event if possible so blur/focus sequence is correct

// Utilize native event to ensure correct state for checkable inputs

// Verify that getAttribute really returns attributes and not properties

// Verify the id attribute

// Walk down the tree looking for a discrepancy

// Watch for a new set of requests

// We add the dataType to the list if needed

// We allow this because of a bug in IE8/9 that throws an error

// We also use the url parameter if available

// We always set camelCase keys, so remove that.

// We always store the camelCased key

// We assume that it's the callback

// We can accept data for non-element nodes in modern browsers,

// We can fire global events as of now if asked to

// We can use :scope instead of the ID hack if the browser

// We can't cloneNode fragments that contain checked, in WebKit

// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching

// We don't need an array for one selects

// We don't want to classify *any* DOM node as a function.

// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2

// We have to close these tags to support XHTML (#13200)

// We must always have either seed elements or outermost context

// We should always get a number back from opacity

// We tried really hard, but the data doesn't exist.

// We use this for POS matching in `select`

// We're done with this property

// Webkit & Blink performance suffers when deleting properties

// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084

// Webkit/Opera - :checked should return selected option elements

// When found, cache indexes on `parent` and break

// When the key is not a string, or both a key and value

// Where available, offsetWidth/offsetHeight approximate border box dimensions.

// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the

// Where there is no isDisabled, check manually

// Work with a copy of dataTypes in case we need to modify it for conversion

// X-Requested-With header

// XHTML parsers do not magically insert elements in the

// __webpack_public_path__

// `contentDocument` with a `null` prototype.

// `i` is now the count of elements visited above, and adding it to `matchedCount`

// `in` check used to prevent JIT error (gh-2145)

// `jQuery.globalEval` so that it can fake a nonce-containing node

// `name` and `type` must use .setAttribute for WWA (#14901)

// `value` parameter was not undefined. An empty jQuery object

// `|| data` is dead code meant only to preserve the variable through minification.

// action, add listener, callbacks,

// advance to the next closing parenthesis

// after the browser event has already occurred.

// akin to a jigsaw puzzle, we simply never set it to be sure.

// already occurred before other listeners are invoked.

// and CommonJS for browser emulators (#13566)

// and blur to be synchronous when the element is not already active.

// and might be considered as more preferable results.

// and multiple values (non-spec behavior)

// and return the corresponding response

// and when you create one that shouldn't be

// and/or If-None-Match header later on

// are based on the document's URL (gh-2965)

// are emptied (fx is the type by default)

// are specified, set or extend (existing objects) with either:

// arg is for internal usage only

// arguments are needed to create the filter function

// arguments.

// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common

// around the issue.

// as such selectors are not recognized by querySelectorAll.

// as xhr.onerror cannot be accessed

// attempt a parseFloat and fallback to a string if the parse fails.

// automatically dequeued

// background-* props affect original clone's values

// becomes browsing-context connected.

// behavior of getting and setting a style property

// being emptied incorrectly in certain situations (#8070).

// being equal to the identifier C,

// bubbling surrogate propagates *after* the non-bubbling base), but that seems

// but it must have a current display style that would benefit

// but that will not handle a native abort

// but those exceptions were never presented as a real life use-cases

// but we should not, see #8335.

// but width seems to be reliably pixels.

// by a handler lower down the tree; reflect the correct value.

// by using document.implementation

// camelCase, specialEasing and expand cssHook pass

// case, which will result in a "00" `matchedCount` that differs from `i` but is also

// check is required in this first loop unless we have a nonempty display value (either

// checked="checked" or checked

// collapse sibling forms: the second one becomes a child of the first one.

// complex values such as "rotate(1rad)" are returned as-is.

// console.log(this.currentTime);

// context (optional): If specified, the fragment will be created in this context,

// correct value when it hasn't been explicitly set

// count of uncompleted subordinates

// count of unprocessed arguments

// create a fake namespace object

// data from the HTML5 data-* attribute

// dataFilter is not invoked for failure responses, so using it instead

// dataPriv.set( el, "click", ... )

// dataPriv.set( this, "blur", ... )

// dataPriv.set( this, "focus", ... )

// dataTypeExpression is optional and defaults to "*"

// deep extended (see ajaxExtend)

// defaults to document

// deferred.done(function() { bind to newDefer or newDefer.resolve })

// deferred.fail(function() { bind to newDefer or newDefer.reject })

// deferred.notify = function() { deferred.notifyWith(...) }

// deferred.notifyWith = list.fireWith

// deferred.progress(function() { bind to newDefer or newDefer.notify })

// deferred.reject = function() { deferred.rejectWith(...) }

// deferred.rejectWith = list.fireWith

// deferred.resolve = function() { deferred.resolveWith(...) }

// deferred.resolveWith = list.fireWith

// define __esModule on exports

// define getter function for harmony exports

// descendant combinators, which is not what we want.

// did it), otherwise encode params recursively.

// disconnected node in IE throws an error

// don't support it.

// e.g. http://example.com:80x/

// e.g. var jQuery = require("jquery")(window);

// elem.tabIndex doesn't always return the

// enough that all such attempts are guarded in a try block.

// equals `i`), unless we didn't visit _any_ elements in the above loop because we have

// error in IE

// errors on any property access that is not readyState

// eslint rule "no-unused-expressions" is disabled for this code

// eslint-disable-next-line eqeqeq

// eslint-disable-next-line no-unused-expressions

// except "table", "table-cell", or "table-caption"

// excess is a negative index

// expose the module cache

// expose the modules object (__webpack_modules__)

// faking a content-box to get border and padding (gh-3699)

// falling back to the empty string if nothing was stored.

// fixes an issue with getting wrong values

// focus() and blur() are asynchronous

// focus() and blur() are asynchronous, except when they are no-op.

// focus(in | out) events fire after focus & blur events,

// focus/blur morphs to focusin/out; ensure we're not firing them right now

// for the description of the bug (it existed in older Chrome versions as well).

// forces the browser to respect setting selected

// fragment in IE 9

// from DOM nodes, so set to undefined instead

// from an async native handler (gh-4350)

// from identically-valued overflowX and overflowY and Edge just mirrors

// fulfilled_callbacks.disable

// fulfilled_handlers.add( ... )

// fulfilled_handlers.disable

// fulfilled_handlers.fire

// getBoundingClientRect().width unless display is changed.

// getComputedStyle returns percent when specified for top/left/bottom/right;

// getDefaultExport function for compatibility with non-harmony modules

// getElementById can match elements by name instead of ID

// getElementById is not reliable as a find shortcut

// getPropertyValue is needed for:

// handleObj is passed to all event handlers

// hasOwn isn't used here due to false negatives

// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked

// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters

// http://www.w3.org/TR/css3-selectors/#whitespace

// http://www.w3.org/TR/selectors/#empty-pseudo

// http://www.w3.org/TR/selectors/#lang-pseudo

// http://www.w3.org/TR/selectors/#pseudo-classes

// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)

// https://bugs.chromium.org/p/chromium/issues/detail?id=470258

// https://bugs.jquery.com/ticket/12359

// https://bugs.jquery.com/ticket/13393

// https://bugs.jquery.com/ticket/4833

// https://bugs.webkit.org/show_bug.cgi?id=136851

// https://bugs.webkit.org/show_bug.cgi?id=137337

// https://drafts.csswg.org/cssom/#common-serializing-idioms

// https://drafts.csswg.org/cssom/#resolved-values

// https://html.spec.whatwg.org/#strip-and-collapse-whitespace

// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled

// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled

// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2

// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace

// https://jsperf.com/thor-indexof-vs-for/5

// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section

// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx

// https://promisesaplus.com/#point-48

// https://promisesaplus.com/#point-54

// https://promisesaplus.com/#point-57

// https://promisesaplus.com/#point-59

// https://promisesaplus.com/#point-61

// https://promisesaplus.com/#point-64

// https://promisesaplus.com/#point-75

// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/

// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/

// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html

// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click

// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram

// if no content

// if not specified.

// if we're just parsing

// in IE throws an error.

// in that case, element will be second argument

// in the document.

// inline or about-to-be-restored)

// innerText usage removed for consistency of new lines (jQuery #11153)

// instead of the first because it can end up

// is based solely on the element's language value

// is present, execute the factory and get jQuery.

// isHiddenWithinTree might be called from jQuery#filter function;

// it can be rejected by the transport if it is invalid

// it will also be a sign that checks already performed

// jQuery handler

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding

// jQuery.proxy is deprecated to promote standards (specifically Function#bind)

// jQuery.support is not used in Core but other projects attach their

// just as Sizzle does

// keepScripts (optional): If true, will include scripts passed in the html string

// key/values into a query string

// lang value must be a valid identifier

// leading to errors. We need to check for `getRootNode`.

// less bad than duplication.

// list with an ID selector referencing the scope context.

// makes the latter nonnegative.

// matchesSelector(:active) reports false when true (IE9/Opera 11.5)

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// native event and prevent that from happening again here.

// no element matchers and no seed.

// nodeType < 6 works because attributes (2) do not appear as children

// nodeType defaults to 9, since context defaults to document

// non-xml :nth-child(...) stores cache data on `parent`

// normalized at this point

// nth-* requires argument

// numeric x and y parameters for Expr.filter.CHILD

// numerically zero.

// of the default converter is kludgy but it works.

// offset() relates an element's border box to the document origin

// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border

// on a disconnected node (IE 9)

// on detached elements

// on the option

// option.text throws exceptions (#14686, #14858)

// options in Safari work properly

// or :nth-last-child(...) or :nth(-last)?-of-type(...)

// or beginning with the identifier C immediately followed by "-".

// or strings [capture 3 or capture 4]"

// or when there is no matching style property that exists.

// otherwise step value is 2 to skip over Left and Right

// otherwise we skip this part

// parseFloat NaNs numeric-cast false positives ("")

// position() relates an element's margin box to its offset parent's padding box

// position:fixed elements are offset from the viewport, which itself always has zero offset

// progress_callbacks.lock

// progress_handlers.add( ... )

// progress_handlers.fire

// progress_handlers.lock

// promise.done = list.add

// promise.fail = list.add

// promise.progress = list.add

// properties to it so it needs to exist.

// pseudo-class names are case-insensitive

// push.apply(_, arraylike) throws on ancient WebKit

// qSA considers elements outside a scoping root when evaluating child or

// qSa(:focus) reports false when true (Chrome 21)

// rather than make the css module depend on the offset module, just check for it here

// regarding Nodelist length in IE

// rejected_callbacks.disable

// rejected_handlers.add( ... )

// rejected_handlers.disable

// rejected_handlers.fire

// release memory in IE

// remember that false/true cast respectively to 0/1

// respecting firingIndex overrides and runtime changes

// results is for internal usage only

// retrieved value as a content box dimension.

// same way that tag soup parsers do. So we cannot shorten

// set in CSS while `offset*` properties report correct values.

// setting a boolean content attribute,

// setting or getting the value

// since it considers such accessions noop

// since it's otherwise lost when execution goes async

// since its presence should be enough

// since they are user-defined.

// so $("p:first").is("p:last") won't return true for a doc with two "p".

// so any parsed elements with URLs

// so migrate can support jQuery.sub (gh-2101)

// so that event delegation works in jQuery.

// so they're executed at the same time to save the second computation.

// so use a roundabout getElementsByName test

// some versions of this test; make sure not to make it pass there!

// spaces as combinators

// specially universal or its namespaces are a superset of the event's.

// state = "rejected"

// state = "resolved" (i.e., fulfilled)

// strings and numbers (primitives or objects)

// subordinate callback factory

// subordinate fulfillment data

// subsequent errors

// subtraction forces infinities to NaN

// supports it & if we're not changing the context.

// surrogate pair

// synthetic events by interrupting progress until reinvoked in response to

// that can be coerced to finite numbers (gh-2662)

// that pass the validator function

// that takes "flat" options (not to be deep extended)

// the `nonce` attribute is reset to an empty string whenever it

// the master Deferred

// the overflowX value there.

// the ready event fires. See #6781

// the select element.

// then remove the whole classname (if there was one, the above saved it).

// there is still data from a stopped show/hide

// this by omitting <tbody> or other required elements.

// this just defines when we can count on it).

// this throws a TypeError, but we will just return undefined.

// this.$elem = elem;

// throw an exception if an attempt to read a data cache is made.

// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode

// timeout handle

// to avoid forcing a reflow.

// to avoid treating leading and trailing

// to handle uncaught aborts

// to missing dependency), remove it.

// top or left is auto and position is either absolute or fixed

// two documents; shallow comparisons work.

// uncached part of the url

// unguarded in another place, it seems safer to define global only for this module

// use plain assignment

// user can override it through ajaxSetup method

// via an object.

// want to modify the value if it is a CSS custom property

// want to query the value if it is a CSS custom property

// warn about them ASAP rather than swallowing them by default.

// webpackBootstrap

// when a statically positioned element is identified

// when an event is called after a page has unloaded

// when in an optgroup

// whenever `document.activeElement` is accessed on an iframe

// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order

// which value to return, respectively either:

// will dequeue but only if they were gotoEnd.

// will not be confused with a leftover capture object.

// will result in `undefined` for elem = this[ 0 ] which will

// with both ajaxSettings and settings fields.

// with direct calls to dataPriv methods, these can be deprecated.

// xml :nth-child(...)

// you can add your own custom options here if
